name: Java CI with Maven

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        jvm_flags_optimal: [
          "-Xms1024m -Xmx2048m",
          "-XX:+UseZGC",
          "-XX:MaxMetaspaceSize=128m -XX:MaxNewSize=256m -XX:SurvivorRatio=128 -XX:MaxTenuringThreshold=0",
          "-XX:+UseCompressedOops"
        ]
        jvm_flags_fail: [
          "-Xmx128m -XX:+HeapDumpOnOutOfMemoryError"
        ]
        common_jvm_flags_logs: [ "-XX:+UnlockDiagnosticVMOptions -Xlog:gc*:file=jvm.log:time,level,tags -XX:+PrintFlagsFinal" ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Set jvm variables for good build
        run: |
          echo "MAVEN_OPTS=${{ matrix.jvm_flags_optimal }} ${{ matrix.common_jvm_flags_logs }}" >> $GITHUB_ENV
        shell: bash

      - name: Build and Test with Maven optimal
        timeout-minutes: 15
        env:
          MAVEN_OPTS: "${{ matrix.jvm_flags_optimal }} ${{ matrix.common_jvm_flags_logs }}"
        run: |
          xvfb-run mvn -B verify -Djavafx.platform=linux jacoco:report -Pcoverage

      - name: Set jvm variables for failing build
        run: |
          echo "MAVEN_OPTS=${{ matrix.jvm_flags_fail }} ${{ matrix.common_jvm_flags_logs }}" >> $GITHUB_ENV
        shell: bash

      - name: Build and Test with Maven failing
        timeout-minutes: 15
        env:
          MAVEN_OPTS: "${{ matrix.jvm_flags_fail }} ${{ matrix.common_jvm_flags_logs }}"
        run: |
          xvfb-run mvn -B verify -Djavafx.platform=linux jacoco:report -Pcoverage

      - name: Get JaCoCo Coverage
        id: coverage
        run: |
          coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv)
          echo "COVERAGE=$coverage" >> $GITHUB_ENV

      - name: Fail if coverage has not improved.
        run: |
          coverage=$COVERAGE
          threshold=24.46
          if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then 
            echo "Coverage is not improved."
            exit 1
          else
            echo "New coverage: $coverage%. Coverage is improved!"
          fi

      - name: Display Build Log
        if: always()
        run: cat target/surefire-reports/*.txt || true
        shell: bash

      - name: Display JVM Log
        if: always()
        run: cat jvm.log
        shell: bash

